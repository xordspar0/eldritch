#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.138                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = 
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG_WIN32 =  $(INC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
CFLAGS_DEBUG_WIN32 =  $(CFLAGS) -Wall -g -O0 -D_DEBUG -D_LIB -DGLEW_STATIC
RESINC_DEBUG_WIN32 =  $(RESINC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
RCFLAGS_DEBUG_WIN32 =  $(RCFLAGS)
LIBDIR_DEBUG_WIN32 =  $(LIBDIR)
LIB_DEBUG_WIN32 = $(LIB)
LDFLAGS_DEBUG_WIN32 =  $(LDFLAGS)
OBJDIR_DEBUG_WIN32 = Debug\ Win32
DEP_DEBUG_WIN32 = 
OUT_DEBUG_WIN32 = Debug\ Win32/3D.a

INC_RELEASE_WIN32 =  $(INC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
CFLAGS_RELEASE_WIN32 =  $(CFLAGS) -Wall -DNDEBUG -D_LIB -DGLEW_STATIC
RESINC_RELEASE_WIN32 =  $(RESINC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
RCFLAGS_RELEASE_WIN32 =  $(RCFLAGS)
LIBDIR_RELEASE_WIN32 =  $(LIBDIR)
LIB_RELEASE_WIN32 = $(LIB)
LDFLAGS_RELEASE_WIN32 =  $(LDFLAGS)
OBJDIR_RELEASE_WIN32 = Release\ Win32
DEP_RELEASE_WIN32 = 
OUT_RELEASE_WIN32 = Release\ Win32/3D.a

INC_NVPERFHUD_RELEASE_WIN32 =  $(INC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
CFLAGS_NVPERFHUD_RELEASE_WIN32 =  $(CFLAGS) -DNDEBUG -D_LIB -DUSE_NVPERFHUD -Wall
RESINC_NVPERFHUD_RELEASE_WIN32 =  $(RESINC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
RCFLAGS_NVPERFHUD_RELEASE_WIN32 =  $(RCFLAGS)
LIBDIR_NVPERFHUD_RELEASE_WIN32 =  $(LIBDIR)
LIB_NVPERFHUD_RELEASE_WIN32 = $(LIB)
LDFLAGS_NVPERFHUD_RELEASE_WIN32 =  $(LDFLAGS)
OBJDIR_NVPERFHUD_RELEASE_WIN32 = NVPerfHUD\ Release\ Win32
DEP_NVPERFHUD_RELEASE_WIN32 = 
OUT_NVPERFHUD_RELEASE_WIN32 = NVPerfHUD\ Release\ Win32/3D.a

INC_FINAL_WIN32 =  $(INC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
CFLAGS_FINAL_WIN32 =  $(CFLAGS) -O3 -Wall -DNDEBUG -D_LIB -D_FINAL -DGLEW_STATIC
RESINC_FINAL_WIN32 =  $(RESINC) -I./src -I../Math/src -I../Core/src -I../GLEW/src
RCFLAGS_FINAL_WIN32 =  $(RCFLAGS)
LIBDIR_FINAL_WIN32 =  $(LIBDIR)
LIB_FINAL_WIN32 = $(LIB)
LDFLAGS_FINAL_WIN32 =  $(LDFLAGS)
OBJDIR_FINAL_WIN32 = Final\ Win32
DEP_FINAL_WIN32 = 
OUT_FINAL_WIN32 = Final\ Win32/3D.a

OBJ_DEBUG_WIN32 = $(OBJDIR_DEBUG_WIN32)/src/renderstates.o $(OBJDIR_DEBUG_WIN32)/src/renderercommon.o $(OBJDIR_DEBUG_WIN32)/src/meshfactory.o $(OBJDIR_DEBUG_WIN32)/src/mesh.o $(OBJDIR_DEBUG_WIN32)/src/material.o $(OBJDIR_DEBUG_WIN32)/src/linebatcher.o $(OBJDIR_DEBUG_WIN32)/src/view.o $(OBJDIR_DEBUG_WIN32)/src/vertexdeclarationmanager.o $(OBJDIR_DEBUG_WIN32)/src/tga.o $(OBJDIR_DEBUG_WIN32)/src/texturemanager.o $(OBJDIR_DEBUG_WIN32)/src/texturecommon.o $(OBJDIR_DEBUG_WIN32)/src/fontmanager.o $(OBJDIR_DEBUG_WIN32)/src/surface.o $(OBJDIR_DEBUG_WIN32)/src/shadermanager.o $(OBJDIR_DEBUG_WIN32)/src/shaderdataprovider.o $(OBJDIR_DEBUG_WIN32)/src/sectorbound.o $(OBJDIR_DEBUG_WIN32)/src/sdpfactory.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2renderer.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexdeclaration.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexbuffer.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2texture.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2shaderprogram.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2rendertarget.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexshader.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2pixelshader.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2indexbuffer.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2cuberendertarget.o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2cubemap.o $(OBJDIR_DEBUG_WIN32)/src/font.o $(OBJDIR_DEBUG_WIN32)/src/dynamicmeshmanager.o $(OBJDIR_DEBUG_WIN32)/src/cubemapcommon.o $(OBJDIR_DEBUG_WIN32)/src/bucket.o $(OBJDIR_DEBUG_WIN32)/src/bonearray.o $(OBJDIR_DEBUG_WIN32)/src/3d.o $(OBJDIR_DEBUG_WIN32)/src/animeventfactory.o $(OBJDIR_DEBUG_WIN32)/src/animevent.o $(OBJDIR_DEBUG_WIN32)/src/animationstate.o $(OBJDIR_DEBUG_WIN32)/src/animation.o $(OBJDIR_DEBUG_WIN32)/src/SDPs/sdpbase.o

OBJ_RELEASE_WIN32 = $(OBJDIR_RELEASE_WIN32)/src/renderstates.o $(OBJDIR_RELEASE_WIN32)/src/renderercommon.o $(OBJDIR_RELEASE_WIN32)/src/meshfactory.o $(OBJDIR_RELEASE_WIN32)/src/mesh.o $(OBJDIR_RELEASE_WIN32)/src/material.o $(OBJDIR_RELEASE_WIN32)/src/linebatcher.o $(OBJDIR_RELEASE_WIN32)/src/view.o $(OBJDIR_RELEASE_WIN32)/src/vertexdeclarationmanager.o $(OBJDIR_RELEASE_WIN32)/src/tga.o $(OBJDIR_RELEASE_WIN32)/src/texturemanager.o $(OBJDIR_RELEASE_WIN32)/src/texturecommon.o $(OBJDIR_RELEASE_WIN32)/src/fontmanager.o $(OBJDIR_RELEASE_WIN32)/src/surface.o $(OBJDIR_RELEASE_WIN32)/src/shadermanager.o $(OBJDIR_RELEASE_WIN32)/src/shaderdataprovider.o $(OBJDIR_RELEASE_WIN32)/src/sectorbound.o $(OBJDIR_RELEASE_WIN32)/src/sdpfactory.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2renderer.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexdeclaration.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexbuffer.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2texture.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2shaderprogram.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2rendertarget.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexshader.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2pixelshader.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2indexbuffer.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2cuberendertarget.o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2cubemap.o $(OBJDIR_RELEASE_WIN32)/src/font.o $(OBJDIR_RELEASE_WIN32)/src/dynamicmeshmanager.o $(OBJDIR_RELEASE_WIN32)/src/cubemapcommon.o $(OBJDIR_RELEASE_WIN32)/src/bucket.o $(OBJDIR_RELEASE_WIN32)/src/bonearray.o $(OBJDIR_RELEASE_WIN32)/src/3d.o $(OBJDIR_RELEASE_WIN32)/src/animeventfactory.o $(OBJDIR_RELEASE_WIN32)/src/animevent.o $(OBJDIR_RELEASE_WIN32)/src/animationstate.o $(OBJDIR_RELEASE_WIN32)/src/animation.o $(OBJDIR_RELEASE_WIN32)/src/SDPs/sdpbase.o

OBJ_NVPERFHUD_RELEASE_WIN32 = $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/renderstates.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/renderercommon.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/meshfactory.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/mesh.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/material.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/linebatcher.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/view.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/vertexdeclarationmanager.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/tga.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/texturemanager.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/texturecommon.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/fontmanager.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/surface.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/shadermanager.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/shaderdataprovider.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/sectorbound.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/sdpfactory.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2renderer.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexdeclaration.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexbuffer.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2texture.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2shaderprogram.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2rendertarget.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexshader.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2pixelshader.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2indexbuffer.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2cuberendertarget.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2cubemap.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/font.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/dynamicmeshmanager.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/cubemapcommon.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/bucket.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/bonearray.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/3d.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animeventfactory.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animevent.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animationstate.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animation.o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/SDPs/sdpbase.o

OBJ_FINAL_WIN32 = $(OBJDIR_FINAL_WIN32)/src/renderstates.o $(OBJDIR_FINAL_WIN32)/src/renderercommon.o $(OBJDIR_FINAL_WIN32)/src/meshfactory.o $(OBJDIR_FINAL_WIN32)/src/mesh.o $(OBJDIR_FINAL_WIN32)/src/material.o $(OBJDIR_FINAL_WIN32)/src/linebatcher.o $(OBJDIR_FINAL_WIN32)/src/view.o $(OBJDIR_FINAL_WIN32)/src/vertexdeclarationmanager.o $(OBJDIR_FINAL_WIN32)/src/tga.o $(OBJDIR_FINAL_WIN32)/src/texturemanager.o $(OBJDIR_FINAL_WIN32)/src/texturecommon.o $(OBJDIR_FINAL_WIN32)/src/fontmanager.o $(OBJDIR_FINAL_WIN32)/src/surface.o $(OBJDIR_FINAL_WIN32)/src/shadermanager.o $(OBJDIR_FINAL_WIN32)/src/shaderdataprovider.o $(OBJDIR_FINAL_WIN32)/src/sectorbound.o $(OBJDIR_FINAL_WIN32)/src/sdpfactory.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2renderer.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexdeclaration.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexbuffer.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2texture.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2shaderprogram.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2rendertarget.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexshader.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2pixelshader.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2indexbuffer.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2cuberendertarget.o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2cubemap.o $(OBJDIR_FINAL_WIN32)/src/font.o $(OBJDIR_FINAL_WIN32)/src/dynamicmeshmanager.o $(OBJDIR_FINAL_WIN32)/src/cubemapcommon.o $(OBJDIR_FINAL_WIN32)/src/bucket.o $(OBJDIR_FINAL_WIN32)/src/bonearray.o $(OBJDIR_FINAL_WIN32)/src/3d.o $(OBJDIR_FINAL_WIN32)/src/animeventfactory.o $(OBJDIR_FINAL_WIN32)/src/animevent.o $(OBJDIR_FINAL_WIN32)/src/animationstate.o $(OBJDIR_FINAL_WIN32)/src/animation.o $(OBJDIR_FINAL_WIN32)/src/SDPs/sdpbase.o

all: debug_win32 release_win32 nvperfhud_release_win32 final_win32

clean: clean_debug_win32 clean_release_win32 clean_nvperfhud_release_win32 clean_final_win32

before_debug_win32: 
	test -d Debug\ Win32 || mkdir -p Debug\ Win32
	test -d $(OBJDIR_DEBUG_WIN32)/src || mkdir -p $(OBJDIR_DEBUG_WIN32)/src
	test -d $(OBJDIR_DEBUG_WIN32)/src/GL2 || mkdir -p $(OBJDIR_DEBUG_WIN32)/src/GL2
	test -d $(OBJDIR_DEBUG_WIN32)/src/SDPs || mkdir -p $(OBJDIR_DEBUG_WIN32)/src/SDPs

after_debug_win32: 

debug_win32: before_debug_win32 out_debug_win32 after_debug_win32

out_debug_win32: before_debug_win32 $(OBJ_DEBUG_WIN32) $(DEP_DEBUG_WIN32)
	$(AR) rcs $(OUT_DEBUG_WIN32) $(OBJ_DEBUG_WIN32)

$(OBJDIR_DEBUG_WIN32)/src/renderstates.o: src/renderstates.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/renderstates.cpp -o $(OBJDIR_DEBUG_WIN32)/src/renderstates.o

$(OBJDIR_DEBUG_WIN32)/src/renderercommon.o: src/renderercommon.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/renderercommon.cpp -o $(OBJDIR_DEBUG_WIN32)/src/renderercommon.o

$(OBJDIR_DEBUG_WIN32)/src/meshfactory.o: src/meshfactory.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/meshfactory.cpp -o $(OBJDIR_DEBUG_WIN32)/src/meshfactory.o

$(OBJDIR_DEBUG_WIN32)/src/mesh.o: src/mesh.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/mesh.cpp -o $(OBJDIR_DEBUG_WIN32)/src/mesh.o

$(OBJDIR_DEBUG_WIN32)/src/material.o: src/material.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/material.cpp -o $(OBJDIR_DEBUG_WIN32)/src/material.o

$(OBJDIR_DEBUG_WIN32)/src/linebatcher.o: src/linebatcher.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/linebatcher.cpp -o $(OBJDIR_DEBUG_WIN32)/src/linebatcher.o

$(OBJDIR_DEBUG_WIN32)/src/view.o: src/view.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/view.cpp -o $(OBJDIR_DEBUG_WIN32)/src/view.o

$(OBJDIR_DEBUG_WIN32)/src/vertexdeclarationmanager.o: src/vertexdeclarationmanager.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/vertexdeclarationmanager.cpp -o $(OBJDIR_DEBUG_WIN32)/src/vertexdeclarationmanager.o

$(OBJDIR_DEBUG_WIN32)/src/tga.o: src/tga.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/tga.cpp -o $(OBJDIR_DEBUG_WIN32)/src/tga.o

$(OBJDIR_DEBUG_WIN32)/src/texturemanager.o: src/texturemanager.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/texturemanager.cpp -o $(OBJDIR_DEBUG_WIN32)/src/texturemanager.o

$(OBJDIR_DEBUG_WIN32)/src/texturecommon.o: src/texturecommon.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/texturecommon.cpp -o $(OBJDIR_DEBUG_WIN32)/src/texturecommon.o

$(OBJDIR_DEBUG_WIN32)/src/fontmanager.o: src/fontmanager.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/fontmanager.cpp -o $(OBJDIR_DEBUG_WIN32)/src/fontmanager.o

$(OBJDIR_DEBUG_WIN32)/src/surface.o: src/surface.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/surface.cpp -o $(OBJDIR_DEBUG_WIN32)/src/surface.o

$(OBJDIR_DEBUG_WIN32)/src/shadermanager.o: src/shadermanager.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/shadermanager.cpp -o $(OBJDIR_DEBUG_WIN32)/src/shadermanager.o

$(OBJDIR_DEBUG_WIN32)/src/shaderdataprovider.o: src/shaderdataprovider.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/shaderdataprovider.cpp -o $(OBJDIR_DEBUG_WIN32)/src/shaderdataprovider.o

$(OBJDIR_DEBUG_WIN32)/src/sectorbound.o: src/sectorbound.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/sectorbound.cpp -o $(OBJDIR_DEBUG_WIN32)/src/sectorbound.o

$(OBJDIR_DEBUG_WIN32)/src/sdpfactory.o: src/sdpfactory.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/sdpfactory.cpp -o $(OBJDIR_DEBUG_WIN32)/src/sdpfactory.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2renderer.o: src/GL2/gl2renderer.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2renderer.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2renderer.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexdeclaration.o: src/GL2/gl2vertexdeclaration.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2vertexdeclaration.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexdeclaration.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexbuffer.o: src/GL2/gl2vertexbuffer.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2vertexbuffer.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexbuffer.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2texture.o: src/GL2/gl2texture.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2texture.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2texture.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2shaderprogram.o: src/GL2/gl2shaderprogram.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2shaderprogram.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2shaderprogram.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2rendertarget.o: src/GL2/gl2rendertarget.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2rendertarget.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2rendertarget.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexshader.o: src/GL2/gl2vertexshader.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2vertexshader.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2vertexshader.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2pixelshader.o: src/GL2/gl2pixelshader.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2pixelshader.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2pixelshader.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2indexbuffer.o: src/GL2/gl2indexbuffer.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2indexbuffer.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2indexbuffer.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2cuberendertarget.o: src/GL2/gl2cuberendertarget.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2cuberendertarget.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2cuberendertarget.o

$(OBJDIR_DEBUG_WIN32)/src/GL2/gl2cubemap.o: src/GL2/gl2cubemap.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/GL2/gl2cubemap.cpp -o $(OBJDIR_DEBUG_WIN32)/src/GL2/gl2cubemap.o

$(OBJDIR_DEBUG_WIN32)/src/font.o: src/font.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/font.cpp -o $(OBJDIR_DEBUG_WIN32)/src/font.o

$(OBJDIR_DEBUG_WIN32)/src/dynamicmeshmanager.o: src/dynamicmeshmanager.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/dynamicmeshmanager.cpp -o $(OBJDIR_DEBUG_WIN32)/src/dynamicmeshmanager.o

$(OBJDIR_DEBUG_WIN32)/src/cubemapcommon.o: src/cubemapcommon.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/cubemapcommon.cpp -o $(OBJDIR_DEBUG_WIN32)/src/cubemapcommon.o

$(OBJDIR_DEBUG_WIN32)/src/bucket.o: src/bucket.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/bucket.cpp -o $(OBJDIR_DEBUG_WIN32)/src/bucket.o

$(OBJDIR_DEBUG_WIN32)/src/bonearray.o: src/bonearray.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/bonearray.cpp -o $(OBJDIR_DEBUG_WIN32)/src/bonearray.o

$(OBJDIR_DEBUG_WIN32)/src/3d.o: src/3d.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/3d.cpp -o $(OBJDIR_DEBUG_WIN32)/src/3d.o

$(OBJDIR_DEBUG_WIN32)/src/animeventfactory.o: src/animeventfactory.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/animeventfactory.cpp -o $(OBJDIR_DEBUG_WIN32)/src/animeventfactory.o

$(OBJDIR_DEBUG_WIN32)/src/animevent.o: src/animevent.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/animevent.cpp -o $(OBJDIR_DEBUG_WIN32)/src/animevent.o

$(OBJDIR_DEBUG_WIN32)/src/animationstate.o: src/animationstate.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/animationstate.cpp -o $(OBJDIR_DEBUG_WIN32)/src/animationstate.o

$(OBJDIR_DEBUG_WIN32)/src/animation.o: src/animation.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/animation.cpp -o $(OBJDIR_DEBUG_WIN32)/src/animation.o

$(OBJDIR_DEBUG_WIN32)/src/SDPs/sdpbase.o: src/SDPs/sdpbase.cpp
	$(CXX) $(CFLAGS_DEBUG_WIN32) $(INC_DEBUG_WIN32) -c src/SDPs/sdpbase.cpp -o $(OBJDIR_DEBUG_WIN32)/src/SDPs/sdpbase.o

clean_debug_win32: 
	rm -f $(OBJ_DEBUG_WIN32) $(OUT_DEBUG_WIN32)
	rm -rf Debug\ Win32
	rm -rf $(OBJDIR_DEBUG_WIN32)/src
	rm -rf $(OBJDIR_DEBUG_WIN32)/src/GL2
	rm -rf $(OBJDIR_DEBUG_WIN32)/src/SDPs

before_release_win32: 
	test -d Release\ Win32 || mkdir -p Release\ Win32
	test -d $(OBJDIR_RELEASE_WIN32)/src || mkdir -p $(OBJDIR_RELEASE_WIN32)/src
	test -d $(OBJDIR_RELEASE_WIN32)/src/GL2 || mkdir -p $(OBJDIR_RELEASE_WIN32)/src/GL2
	test -d $(OBJDIR_RELEASE_WIN32)/src/SDPs || mkdir -p $(OBJDIR_RELEASE_WIN32)/src/SDPs

after_release_win32: 

release_win32: before_release_win32 out_release_win32 after_release_win32

out_release_win32: before_release_win32 $(OBJ_RELEASE_WIN32) $(DEP_RELEASE_WIN32)
	$(AR) rcs $(OUT_RELEASE_WIN32) $(OBJ_RELEASE_WIN32)

$(OBJDIR_RELEASE_WIN32)/src/renderstates.o: src/renderstates.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/renderstates.cpp -o $(OBJDIR_RELEASE_WIN32)/src/renderstates.o

$(OBJDIR_RELEASE_WIN32)/src/renderercommon.o: src/renderercommon.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/renderercommon.cpp -o $(OBJDIR_RELEASE_WIN32)/src/renderercommon.o

$(OBJDIR_RELEASE_WIN32)/src/meshfactory.o: src/meshfactory.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/meshfactory.cpp -o $(OBJDIR_RELEASE_WIN32)/src/meshfactory.o

$(OBJDIR_RELEASE_WIN32)/src/mesh.o: src/mesh.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/mesh.cpp -o $(OBJDIR_RELEASE_WIN32)/src/mesh.o

$(OBJDIR_RELEASE_WIN32)/src/material.o: src/material.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/material.cpp -o $(OBJDIR_RELEASE_WIN32)/src/material.o

$(OBJDIR_RELEASE_WIN32)/src/linebatcher.o: src/linebatcher.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/linebatcher.cpp -o $(OBJDIR_RELEASE_WIN32)/src/linebatcher.o

$(OBJDIR_RELEASE_WIN32)/src/view.o: src/view.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/view.cpp -o $(OBJDIR_RELEASE_WIN32)/src/view.o

$(OBJDIR_RELEASE_WIN32)/src/vertexdeclarationmanager.o: src/vertexdeclarationmanager.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/vertexdeclarationmanager.cpp -o $(OBJDIR_RELEASE_WIN32)/src/vertexdeclarationmanager.o

$(OBJDIR_RELEASE_WIN32)/src/tga.o: src/tga.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/tga.cpp -o $(OBJDIR_RELEASE_WIN32)/src/tga.o

$(OBJDIR_RELEASE_WIN32)/src/texturemanager.o: src/texturemanager.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/texturemanager.cpp -o $(OBJDIR_RELEASE_WIN32)/src/texturemanager.o

$(OBJDIR_RELEASE_WIN32)/src/texturecommon.o: src/texturecommon.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/texturecommon.cpp -o $(OBJDIR_RELEASE_WIN32)/src/texturecommon.o

$(OBJDIR_RELEASE_WIN32)/src/fontmanager.o: src/fontmanager.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/fontmanager.cpp -o $(OBJDIR_RELEASE_WIN32)/src/fontmanager.o

$(OBJDIR_RELEASE_WIN32)/src/surface.o: src/surface.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/surface.cpp -o $(OBJDIR_RELEASE_WIN32)/src/surface.o

$(OBJDIR_RELEASE_WIN32)/src/shadermanager.o: src/shadermanager.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/shadermanager.cpp -o $(OBJDIR_RELEASE_WIN32)/src/shadermanager.o

$(OBJDIR_RELEASE_WIN32)/src/shaderdataprovider.o: src/shaderdataprovider.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/shaderdataprovider.cpp -o $(OBJDIR_RELEASE_WIN32)/src/shaderdataprovider.o

$(OBJDIR_RELEASE_WIN32)/src/sectorbound.o: src/sectorbound.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/sectorbound.cpp -o $(OBJDIR_RELEASE_WIN32)/src/sectorbound.o

$(OBJDIR_RELEASE_WIN32)/src/sdpfactory.o: src/sdpfactory.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/sdpfactory.cpp -o $(OBJDIR_RELEASE_WIN32)/src/sdpfactory.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2renderer.o: src/GL2/gl2renderer.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2renderer.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2renderer.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexdeclaration.o: src/GL2/gl2vertexdeclaration.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2vertexdeclaration.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexdeclaration.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexbuffer.o: src/GL2/gl2vertexbuffer.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2vertexbuffer.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexbuffer.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2texture.o: src/GL2/gl2texture.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2texture.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2texture.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2shaderprogram.o: src/GL2/gl2shaderprogram.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2shaderprogram.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2shaderprogram.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2rendertarget.o: src/GL2/gl2rendertarget.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2rendertarget.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2rendertarget.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexshader.o: src/GL2/gl2vertexshader.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2vertexshader.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2vertexshader.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2pixelshader.o: src/GL2/gl2pixelshader.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2pixelshader.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2pixelshader.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2indexbuffer.o: src/GL2/gl2indexbuffer.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2indexbuffer.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2indexbuffer.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2cuberendertarget.o: src/GL2/gl2cuberendertarget.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2cuberendertarget.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2cuberendertarget.o

$(OBJDIR_RELEASE_WIN32)/src/GL2/gl2cubemap.o: src/GL2/gl2cubemap.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/GL2/gl2cubemap.cpp -o $(OBJDIR_RELEASE_WIN32)/src/GL2/gl2cubemap.o

$(OBJDIR_RELEASE_WIN32)/src/font.o: src/font.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/font.cpp -o $(OBJDIR_RELEASE_WIN32)/src/font.o

$(OBJDIR_RELEASE_WIN32)/src/dynamicmeshmanager.o: src/dynamicmeshmanager.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/dynamicmeshmanager.cpp -o $(OBJDIR_RELEASE_WIN32)/src/dynamicmeshmanager.o

$(OBJDIR_RELEASE_WIN32)/src/cubemapcommon.o: src/cubemapcommon.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/cubemapcommon.cpp -o $(OBJDIR_RELEASE_WIN32)/src/cubemapcommon.o

$(OBJDIR_RELEASE_WIN32)/src/bucket.o: src/bucket.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/bucket.cpp -o $(OBJDIR_RELEASE_WIN32)/src/bucket.o

$(OBJDIR_RELEASE_WIN32)/src/bonearray.o: src/bonearray.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/bonearray.cpp -o $(OBJDIR_RELEASE_WIN32)/src/bonearray.o

$(OBJDIR_RELEASE_WIN32)/src/3d.o: src/3d.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/3d.cpp -o $(OBJDIR_RELEASE_WIN32)/src/3d.o

$(OBJDIR_RELEASE_WIN32)/src/animeventfactory.o: src/animeventfactory.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/animeventfactory.cpp -o $(OBJDIR_RELEASE_WIN32)/src/animeventfactory.o

$(OBJDIR_RELEASE_WIN32)/src/animevent.o: src/animevent.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/animevent.cpp -o $(OBJDIR_RELEASE_WIN32)/src/animevent.o

$(OBJDIR_RELEASE_WIN32)/src/animationstate.o: src/animationstate.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/animationstate.cpp -o $(OBJDIR_RELEASE_WIN32)/src/animationstate.o

$(OBJDIR_RELEASE_WIN32)/src/animation.o: src/animation.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/animation.cpp -o $(OBJDIR_RELEASE_WIN32)/src/animation.o

$(OBJDIR_RELEASE_WIN32)/src/SDPs/sdpbase.o: src/SDPs/sdpbase.cpp
	$(CXX) $(CFLAGS_RELEASE_WIN32) $(INC_RELEASE_WIN32) -c src/SDPs/sdpbase.cpp -o $(OBJDIR_RELEASE_WIN32)/src/SDPs/sdpbase.o

clean_release_win32: 
	rm -f $(OBJ_RELEASE_WIN32) $(OUT_RELEASE_WIN32)
	rm -rf Release\ Win32
	rm -rf $(OBJDIR_RELEASE_WIN32)/src
	rm -rf $(OBJDIR_RELEASE_WIN32)/src/GL2
	rm -rf $(OBJDIR_RELEASE_WIN32)/src/SDPs

before_nvperfhud_release_win32: 
	test -d NVPerfHUD\ Release\ Win32 || mkdir -p NVPerfHUD\ Release\ Win32
	test -d $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src || mkdir -p $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src
	test -d $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2 || mkdir -p $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2
	test -d $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/SDPs || mkdir -p $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/SDPs

after_nvperfhud_release_win32: 

nvperfhud_release_win32: before_nvperfhud_release_win32 out_nvperfhud_release_win32 after_nvperfhud_release_win32

out_nvperfhud_release_win32: before_nvperfhud_release_win32 $(OBJ_NVPERFHUD_RELEASE_WIN32) $(DEP_NVPERFHUD_RELEASE_WIN32)
	$(AR) rcs $(OUT_NVPERFHUD_RELEASE_WIN32) $(OBJ_NVPERFHUD_RELEASE_WIN32)

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/renderstates.o: src/renderstates.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/renderstates.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/renderstates.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/renderercommon.o: src/renderercommon.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/renderercommon.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/renderercommon.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/meshfactory.o: src/meshfactory.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/meshfactory.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/meshfactory.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/mesh.o: src/mesh.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/mesh.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/mesh.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/material.o: src/material.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/material.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/material.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/linebatcher.o: src/linebatcher.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/linebatcher.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/linebatcher.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/view.o: src/view.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/view.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/view.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/vertexdeclarationmanager.o: src/vertexdeclarationmanager.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/vertexdeclarationmanager.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/vertexdeclarationmanager.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/tga.o: src/tga.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/tga.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/tga.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/texturemanager.o: src/texturemanager.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/texturemanager.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/texturemanager.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/texturecommon.o: src/texturecommon.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/texturecommon.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/texturecommon.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/fontmanager.o: src/fontmanager.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/fontmanager.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/fontmanager.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/surface.o: src/surface.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/surface.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/surface.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/shadermanager.o: src/shadermanager.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/shadermanager.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/shadermanager.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/shaderdataprovider.o: src/shaderdataprovider.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/shaderdataprovider.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/shaderdataprovider.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/sectorbound.o: src/sectorbound.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/sectorbound.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/sectorbound.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/sdpfactory.o: src/sdpfactory.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/sdpfactory.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/sdpfactory.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2renderer.o: src/GL2/gl2renderer.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2renderer.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2renderer.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexdeclaration.o: src/GL2/gl2vertexdeclaration.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2vertexdeclaration.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexdeclaration.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexbuffer.o: src/GL2/gl2vertexbuffer.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2vertexbuffer.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexbuffer.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2texture.o: src/GL2/gl2texture.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2texture.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2texture.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2shaderprogram.o: src/GL2/gl2shaderprogram.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2shaderprogram.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2shaderprogram.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2rendertarget.o: src/GL2/gl2rendertarget.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2rendertarget.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2rendertarget.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexshader.o: src/GL2/gl2vertexshader.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2vertexshader.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2vertexshader.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2pixelshader.o: src/GL2/gl2pixelshader.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2pixelshader.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2pixelshader.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2indexbuffer.o: src/GL2/gl2indexbuffer.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2indexbuffer.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2indexbuffer.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2cuberendertarget.o: src/GL2/gl2cuberendertarget.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2cuberendertarget.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2cuberendertarget.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2cubemap.o: src/GL2/gl2cubemap.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/GL2/gl2cubemap.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2/gl2cubemap.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/font.o: src/font.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/font.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/font.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/dynamicmeshmanager.o: src/dynamicmeshmanager.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/dynamicmeshmanager.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/dynamicmeshmanager.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/cubemapcommon.o: src/cubemapcommon.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/cubemapcommon.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/cubemapcommon.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/bucket.o: src/bucket.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/bucket.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/bucket.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/bonearray.o: src/bonearray.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/bonearray.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/bonearray.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/3d.o: src/3d.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/3d.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/3d.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animeventfactory.o: src/animeventfactory.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/animeventfactory.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animeventfactory.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animevent.o: src/animevent.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/animevent.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animevent.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animationstate.o: src/animationstate.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/animationstate.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animationstate.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animation.o: src/animation.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/animation.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/animation.o

$(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/SDPs/sdpbase.o: src/SDPs/sdpbase.cpp
	$(CXX) $(CFLAGS_NVPERFHUD_RELEASE_WIN32) $(INC_NVPERFHUD_RELEASE_WIN32) -c src/SDPs/sdpbase.cpp -o $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/SDPs/sdpbase.o

clean_nvperfhud_release_win32: 
	rm -f $(OBJ_NVPERFHUD_RELEASE_WIN32) $(OUT_NVPERFHUD_RELEASE_WIN32)
	rm -rf NVPerfHUD\ Release\ Win32
	rm -rf $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src
	rm -rf $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/GL2
	rm -rf $(OBJDIR_NVPERFHUD_RELEASE_WIN32)/src/SDPs

before_final_win32: 
	test -d Final\ Win32 || mkdir -p Final\ Win32
	test -d $(OBJDIR_FINAL_WIN32)/src || mkdir -p $(OBJDIR_FINAL_WIN32)/src
	test -d $(OBJDIR_FINAL_WIN32)/src/GL2 || mkdir -p $(OBJDIR_FINAL_WIN32)/src/GL2
	test -d $(OBJDIR_FINAL_WIN32)/src/SDPs || mkdir -p $(OBJDIR_FINAL_WIN32)/src/SDPs

after_final_win32: 

final_win32: before_final_win32 out_final_win32 after_final_win32

out_final_win32: before_final_win32 $(OBJ_FINAL_WIN32) $(DEP_FINAL_WIN32)
	$(AR) rcs $(OUT_FINAL_WIN32) $(OBJ_FINAL_WIN32)

$(OBJDIR_FINAL_WIN32)/src/renderstates.o: src/renderstates.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/renderstates.cpp -o $(OBJDIR_FINAL_WIN32)/src/renderstates.o

$(OBJDIR_FINAL_WIN32)/src/renderercommon.o: src/renderercommon.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/renderercommon.cpp -o $(OBJDIR_FINAL_WIN32)/src/renderercommon.o

$(OBJDIR_FINAL_WIN32)/src/meshfactory.o: src/meshfactory.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/meshfactory.cpp -o $(OBJDIR_FINAL_WIN32)/src/meshfactory.o

$(OBJDIR_FINAL_WIN32)/src/mesh.o: src/mesh.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/mesh.cpp -o $(OBJDIR_FINAL_WIN32)/src/mesh.o

$(OBJDIR_FINAL_WIN32)/src/material.o: src/material.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/material.cpp -o $(OBJDIR_FINAL_WIN32)/src/material.o

$(OBJDIR_FINAL_WIN32)/src/linebatcher.o: src/linebatcher.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/linebatcher.cpp -o $(OBJDIR_FINAL_WIN32)/src/linebatcher.o

$(OBJDIR_FINAL_WIN32)/src/view.o: src/view.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/view.cpp -o $(OBJDIR_FINAL_WIN32)/src/view.o

$(OBJDIR_FINAL_WIN32)/src/vertexdeclarationmanager.o: src/vertexdeclarationmanager.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/vertexdeclarationmanager.cpp -o $(OBJDIR_FINAL_WIN32)/src/vertexdeclarationmanager.o

$(OBJDIR_FINAL_WIN32)/src/tga.o: src/tga.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/tga.cpp -o $(OBJDIR_FINAL_WIN32)/src/tga.o

$(OBJDIR_FINAL_WIN32)/src/texturemanager.o: src/texturemanager.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/texturemanager.cpp -o $(OBJDIR_FINAL_WIN32)/src/texturemanager.o

$(OBJDIR_FINAL_WIN32)/src/texturecommon.o: src/texturecommon.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/texturecommon.cpp -o $(OBJDIR_FINAL_WIN32)/src/texturecommon.o

$(OBJDIR_FINAL_WIN32)/src/fontmanager.o: src/fontmanager.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/fontmanager.cpp -o $(OBJDIR_FINAL_WIN32)/src/fontmanager.o

$(OBJDIR_FINAL_WIN32)/src/surface.o: src/surface.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/surface.cpp -o $(OBJDIR_FINAL_WIN32)/src/surface.o

$(OBJDIR_FINAL_WIN32)/src/shadermanager.o: src/shadermanager.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/shadermanager.cpp -o $(OBJDIR_FINAL_WIN32)/src/shadermanager.o

$(OBJDIR_FINAL_WIN32)/src/shaderdataprovider.o: src/shaderdataprovider.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/shaderdataprovider.cpp -o $(OBJDIR_FINAL_WIN32)/src/shaderdataprovider.o

$(OBJDIR_FINAL_WIN32)/src/sectorbound.o: src/sectorbound.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/sectorbound.cpp -o $(OBJDIR_FINAL_WIN32)/src/sectorbound.o

$(OBJDIR_FINAL_WIN32)/src/sdpfactory.o: src/sdpfactory.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/sdpfactory.cpp -o $(OBJDIR_FINAL_WIN32)/src/sdpfactory.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2renderer.o: src/GL2/gl2renderer.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2renderer.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2renderer.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexdeclaration.o: src/GL2/gl2vertexdeclaration.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2vertexdeclaration.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexdeclaration.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexbuffer.o: src/GL2/gl2vertexbuffer.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2vertexbuffer.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexbuffer.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2texture.o: src/GL2/gl2texture.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2texture.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2texture.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2shaderprogram.o: src/GL2/gl2shaderprogram.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2shaderprogram.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2shaderprogram.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2rendertarget.o: src/GL2/gl2rendertarget.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2rendertarget.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2rendertarget.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexshader.o: src/GL2/gl2vertexshader.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2vertexshader.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2vertexshader.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2pixelshader.o: src/GL2/gl2pixelshader.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2pixelshader.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2pixelshader.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2indexbuffer.o: src/GL2/gl2indexbuffer.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2indexbuffer.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2indexbuffer.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2cuberendertarget.o: src/GL2/gl2cuberendertarget.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2cuberendertarget.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2cuberendertarget.o

$(OBJDIR_FINAL_WIN32)/src/GL2/gl2cubemap.o: src/GL2/gl2cubemap.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/GL2/gl2cubemap.cpp -o $(OBJDIR_FINAL_WIN32)/src/GL2/gl2cubemap.o

$(OBJDIR_FINAL_WIN32)/src/font.o: src/font.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/font.cpp -o $(OBJDIR_FINAL_WIN32)/src/font.o

$(OBJDIR_FINAL_WIN32)/src/dynamicmeshmanager.o: src/dynamicmeshmanager.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/dynamicmeshmanager.cpp -o $(OBJDIR_FINAL_WIN32)/src/dynamicmeshmanager.o

$(OBJDIR_FINAL_WIN32)/src/cubemapcommon.o: src/cubemapcommon.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/cubemapcommon.cpp -o $(OBJDIR_FINAL_WIN32)/src/cubemapcommon.o

$(OBJDIR_FINAL_WIN32)/src/bucket.o: src/bucket.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/bucket.cpp -o $(OBJDIR_FINAL_WIN32)/src/bucket.o

$(OBJDIR_FINAL_WIN32)/src/bonearray.o: src/bonearray.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/bonearray.cpp -o $(OBJDIR_FINAL_WIN32)/src/bonearray.o

$(OBJDIR_FINAL_WIN32)/src/3d.o: src/3d.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/3d.cpp -o $(OBJDIR_FINAL_WIN32)/src/3d.o

$(OBJDIR_FINAL_WIN32)/src/animeventfactory.o: src/animeventfactory.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/animeventfactory.cpp -o $(OBJDIR_FINAL_WIN32)/src/animeventfactory.o

$(OBJDIR_FINAL_WIN32)/src/animevent.o: src/animevent.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/animevent.cpp -o $(OBJDIR_FINAL_WIN32)/src/animevent.o

$(OBJDIR_FINAL_WIN32)/src/animationstate.o: src/animationstate.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/animationstate.cpp -o $(OBJDIR_FINAL_WIN32)/src/animationstate.o

$(OBJDIR_FINAL_WIN32)/src/animation.o: src/animation.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/animation.cpp -o $(OBJDIR_FINAL_WIN32)/src/animation.o

$(OBJDIR_FINAL_WIN32)/src/SDPs/sdpbase.o: src/SDPs/sdpbase.cpp
	$(CXX) $(CFLAGS_FINAL_WIN32) $(INC_FINAL_WIN32) -c src/SDPs/sdpbase.cpp -o $(OBJDIR_FINAL_WIN32)/src/SDPs/sdpbase.o

clean_final_win32: 
	rm -f $(OBJ_FINAL_WIN32) $(OUT_FINAL_WIN32)
	rm -rf Final\ Win32
	rm -rf $(OBJDIR_FINAL_WIN32)/src
	rm -rf $(OBJDIR_FINAL_WIN32)/src/GL2
	rm -rf $(OBJDIR_FINAL_WIN32)/src/SDPs

.PHONY: before_debug_win32 after_debug_win32 clean_debug_win32 before_release_win32 after_release_win32 clean_release_win32 before_nvperfhud_release_win32 after_nvperfhud_release_win32 clean_nvperfhud_release_win32 before_final_win32 after_final_win32 clean_final_win32

